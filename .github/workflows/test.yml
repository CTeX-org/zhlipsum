name: build

on: [push]

env:
  CTAN_URL: https://mirrors.rit.edu/CTAN
  TL_PACKAGES: adobemapping amsfonts amsmath atbegshi caption cjk cjkpunct cjkutils cm ctablestack ctex currfile dvipdfmx ec epstopdf-pkg etex etoolbox euenc fandol filehook fontspec graphics graphics-cfg graphics-def iftex knuth-lib l3backend l3build l3experimental l3kernel l3packages latex-bin lm lm-math ltxcmds lualatex-math lualibs luaotfload luatex luatex85 luatexbase luatexja metafont mfware ms oberdiek platex-tools psnfss tex tex-ini-files tools ucharcat ulem unicode-data uplatex xcjk2uni xcolor xecjk xetex xkeyval xunicode zhmetrics zhmetrics-uptex zhnumber

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install TeX Live
      run: |
        export PATH=/tmp/texlive/bin/x86_64-linux:$PATH
        wget ${{ env.CTAN_URL }}/systems/texlive/tlnet/install-tl-unx.tar.gz
        tar -xzf install-tl-unx.tar.gz
        cd install-tl-20* && ./install-tl --profile ../.github/workflows/texlive.profile
        tlmgr install ${{ env.TL_PACKAGES }}
        tlmgr update --self --all --no-auto-install --repository=${{ env.CTAN_URL }}/systems/texlive/tlnet/
    - name: Test zhlipsum
      run: |
        export PATH=/tmp/texlive/bin/x86_64-linux:$PATH
        l3build check -q -H
        cat ./build/test/compilation-big5.pdftex.log

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install TeX Live
      run: |
        export PATH=/tmp/texlive/bin/x86_64-darwin:$PATH
        curl -O ${{ env.CTAN_URL }}/systems/texlive/tlnet/install-tl-unx.tar.gz
        tar -xzf install-tl-unx.tar.gz
        cd install-tl-20* && ./install-tl --profile ../.github/workflows/texlive.profile
        tlmgr install ${{ env.TL_PACKAGES }}
        tlmgr update --self --all --no-auto-install --repository=${{ env.CTAN_URL }}/systems/texlive/tlnet/
    - name: Test zhlipsum
      run: |
        export PATH=/tmp/texlive/bin/x86_64-darwin:$PATH
        l3build check -q -H

  ## Line wrap problem is difficult to resolve on windows.
  # build-windows:
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Install TeX Live
  #     run: |
  #       ${env:PATH} = "${{ github.workspace }}\tmp\texlive\bin\win32;" + ${env:PATH}
  #       Invoke-WebRequest -Uri ${{ env.CTAN_URL }}/systems/texlive/tlnet/install-tl.zip -OutFile install-tl.zip
  #       Expand-Archive install-tl.zip -DestinationPath .
  #       Set-Location install-tl-*
  #       .\install-tl-windows --no-gui --profile ..\.github\workflows\texlive-win.profile
  #       tlmgr install ${{ env.TL_PACKAGES }}
  #       tlmgr update --self --all --no-auto-install --repository=${{ env.CTAN_URL }}/systems/texlive/tlnet/
  #   - name: Test zhlipsum
  #     run: |
  #       ${env:PATH} = "${{ github.workspace }}\tmp\texlive\bin\win32;" + ${env:PATH}
  #       l3build check -q -H
